cmake_minimum_required(VERSION 2.8)

PROJECT(InnoSetupInstaller)

IF(WIN32)

###########################################################
# VERSIONNING STUFF
	
# FIND_PACKAGE(Subversion)

# IF(Subversion_FOUND)
	# Subversion_WC_INFO(${CMAKE_SOURCE_DIR} SwiftsPlayer)
	# SET(SVN_REVISION ${SwiftsPlayer_WC_REVISION})
	# MESSAGE(STATUS "SVN_REVISION : ${SVN_REVISION}")
# ENDIF(Subversion_FOUND)

MACRO (TODAY BUILD_DATE BUILD_TIME)
    IF (WIN32)
        EXECUTE_PROCESS(COMMAND "cmd" " /C date /T" OUTPUT_VARIABLE ${BUILD_DATE})
        string(REGEX REPLACE "(..)/(..)/..(..).*" "\\3\\2\\1" ${BUILD_DATE} ${${BUILD_DATE}})
    ELSEIF(UNIX)
        EXECUTE_PROCESS(COMMAND "date" "+%d/%m/%Y" OUTPUT_VARIABLE ${BUILD_DATE})
        string(REGEX REPLACE "(..)/(..)/..(..).*" "\\3\\2\\1" ${BUILD_DATE} ${${BUILD_DATE}})
    ELSE (WIN32)
        MESSAGE(SEND_ERROR "date not implemented")
        SET(${RESULT} 000000)
    ENDIF (WIN32)
ENDMACRO (TODAY)

TODAY(BUILD_DATE BUILD_TIME)
MESSAGE(STATUS "Build date = ${BUILD_DATE}")

SET(CMAKE_INNO_SETUP_VERSION "1.0.${BUILD_DATE}")

IF(${SVN_REVISION})
SET(CPACK_PACKAGE_VERSION "${CPACK_PACKAGE_VERSION}.${SVN_REVISION}")
SET(CPACK_PACKAGE_VERSION_PATCH "${CPACK_PACKAGE_VERSION_PATCH}.${SVN_REVISION}")
ENDIF(${SVN_REVISION})

IF(${CMAKE_SIZEOF_VOID_P} EQUAL 4)
SET(BIT_NUMBER "32")
ELSEIF(${CMAKE_SIZEOF_VOID_P} EQUAL 8)
SET(BIT_NUMBER "64")
ENDIF(${CMAKE_SIZEOF_VOID_P} EQUAL 4)

# VERSIONNING STUFF
###########################################################


find_path( ISCC_COMPILER_PATH iscc.exe
	"C:/Program Files (x86)/Inno Setup 5"
	"C:/Program Files/Inno Setup 5"
)

SET(ISCC_COMPILER_PATH "${ISCC_COMPILER_PATH}/iscc.exe")
MESSAGE(STATUS "ISCC_COMPILER_PATH : ${ISCC_COMPILER_PATH}")

IF (ISCC_COMPILER_PATH)

SET(CMAKE_INNO_SETUP_APP_NAME "Mouthus")
IF(${SVN_REVISION})
SET(CMAKE_INNO_SETUP_APP_VERSION "1.0.${BUILD_DATE}.${SVN_REVISION}.${BIT_NUMBER}")
ELSE(${SVN_REVISION})
SET(CMAKE_INNO_SETUP_APP_VERSION "1.0.${BUILD_DATE}.${BIT_NUMBER}")
ENDIF(${SVN_REVISION})
SET(CMAKE_INNO_SETUP_APP_PUBLISHER "Bruno Martin")
SET(CMAKE_INNO_SETUP_APP_URL "http://brunomartin.dtdns.net:2180/mouthus")
SET(CMAKE_INNO_SETUP_APP_EXE_NAME "Mouthus.exe")
SET(CMAKE_INNO_SETUP_APP_LICENSE_FILE "${CMAKE_CURRENT_SOURCE_DIR}/license.txt")
SET(CMAKE_INNO_SETUP_OUTPUT_DIR "${CMAKE_BINARY_DIR}/installer")
# SET(CMAKE_INNO_SETUP_OUTPUT_BASE_FILENAME "Spectra Resolver-${CMAKE_INNO_SETUP_APP_VERSION}-win${BIT_NUMBER}")
SET(CMAKE_INNO_SETUP_SETUP_ICON_FILE "${CMAKE_CURRENT_SOURCE_DIR}/../ressources/mouthus_icon.png")
SET(CMAKE_INNO_SETUP_UNINSTALL_ICON_FILE "${CMAKE_CURRENT_SOURCE_DIR}/../ressources/mouthus_icon.png")
# SET(CMAKE_INNO_SETUP_WIZARD_IMAGE_FILE "${CMAKE_CURRENT_SOURCE_DIR}/splash_rss2_164x314.bmp")
# SET(CMAKE_INNO_SETUP_WIZARD_SMALL_IMAGE_FILE "${CMAKE_CURRENT_SOURCE_DIR}/splash_rss2_55x55.bmp")

SET(CMAKE_INNO_SETUP_QT_BIN_DIR "${QT_BINARY_DIR}")

GET_PROPERTY(Mouthus_location TARGET Mouthus PROPERTY LOCATION)

SET(CMAKE_INNO_SETUP_EXE_PATH "@CMAKE_INNO_SETUP_EXE_PATH@")
SET(CMAKE_INNO_SETUP_OUTPUT_BASE_FILENAME "@CMAKE_INNO_SETUP_OUTPUT_BASE_FILENAME@")

MESSAGE(STATUS "CMAKE_INNO_SETUP_APP_VERSION : ${CMAKE_INNO_SETUP_APP_VERSION}")
MESSAGE(STATUS "CMAKE_INNO_SETUP_OUTPUT_BASE_FILENAME : ${CMAKE_INNO_SETUP_OUTPUT_BASE_FILENAME}")

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/mouthus.iss.in ${CMAKE_CURRENT_BINARY_DIR}/mouthus.iss.in @ONLY IMMEDIATE)

SET(ISCC_INPUT ${CMAKE_CURRENT_BINARY_DIR}/mouthus.iss)
SET(ISCC_OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/IsccOutput)

ADD_CUSTOM_COMMAND(
	OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/mouthus.iss
	COMMAND ${CMAKE_COMMAND}
		-DCMAKE_INNO_SETUP_APP_VERSION=${CMAKE_INNO_SETUP_APP_VERSION}
		-DBIT_NUMBER=${BIT_NUMBER}
		-DMouthus_location=${Mouthus_location}
		-P ${CMAKE_CURRENT_SOURCE_DIR}/mouthus.iss.cmake
	DEPENDS
		${CMAKE_CURRENT_BINARY_DIR}/mouthus.iss.in
		Mouthus
	COMMENT "Configuring mouthus.iss"
	# VERBATIM
)

ADD_CUSTOM_COMMAND(
	OUTPUT	${ISCC_OUTPUT}
	COMMAND ${CMAKE_COMMAND} -E echo_append "Building Inno Setup Installer..."
	COMMAND ${ISCC_COMPILER_PATH} ${ISCC_INPUT}
	COMMAND ${CMAKE_COMMAND} -E echo "Done."
)

ADD_CUSTOM_TARGET(ConfigureIscc DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/mouthus.iss)
add_dependencies(ConfigureIscc Mouthus )

ADD_CUSTOM_TARGET(InnoSetupInstaller DEPENDS ${ISCC_OUTPUT})

add_dependencies(InnoSetupInstaller Mouthus ConfigureIscc)

ELSE()
MESSAGE(STATUS "Unable to compile installer with inno setup : have to install inno setup")
ENDIF (ISCC_COMPILER_PATH)

ENDIF(WIN32)